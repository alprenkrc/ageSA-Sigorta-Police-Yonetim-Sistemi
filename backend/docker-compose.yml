version: '3.8'

services:
  # PostgreSQL Database for User Service
  userdb:
    image: postgres:15-alpine
    container_name: userdb
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - userdb_data:/var/lib/postgresql/data
    networks:
      - insurance-network

  # PostgreSQL Database for Policy Service
  policydb:
    image: postgres:15-alpine
    container_name: policydb
    environment:
      POSTGRES_DB: policydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - policydb_data:/var/lib/postgresql/data
    networks:
      - insurance-network

  # Eureka Server
  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - insurance-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Config Server
  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      eureka-server:
        condition: service_healthy
    networks:
      - insurance-network

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
      - config-server
    networks:
      - insurance-network

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - userdb
      - eureka-server
      - config-server
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://userdb:5432/userdb
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - insurance-network

  # Policy Service
  policy-service:
    build:
      context: ./policy-service
      dockerfile: Dockerfile
    container_name: policy-service
    ports:
      - "8082:8082"
    depends_on:
      - policydb
      - eureka-server
      - config-server
      - user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://policydb:5432/policydb
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka/
    networks:
      - insurance-network

volumes:
  userdb_data:
  policydb_data:

networks:
  insurance-network:
    driver: bridge
